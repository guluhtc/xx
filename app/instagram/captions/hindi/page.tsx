"use client"

import { useState } from "react"
import { motion } from "framer-motion"
import { Navbar } from "@/components/navbar"
import { FooterSection } from "@/components/footer-section"
import { Crown } from "lucide-react"
import { toast } from "sonner"
import { ToolsToggle } from "@/components/instagram/tools-toggle"
import { HindiCaptionForm } from "@/components/captions/hindi/caption-form"
import { CaptionList } from "@/components/captions/caption-list"
import { HindiFeatureCards } from "@/components/captions/hindi/feature-cards"

export default function HindiCaptionsPage() {
  const [isGenerating, setIsGenerating] = useState(false)
  const [generatedCaptions, setGeneratedCaptions] = useState<string[]>([])
  const [isPremiumPreview, setIsPremiumPreview] = useState(true)
  const [savedCaptions, setSavedCaptions] = useState<string[]>([])

  const handleGenerate = async (prompt: string, options: any) => {
    if (!prompt) {
      toast.error("‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç")
      return
    }

    setIsGenerating(true)
    try {
      // Simulated API call
      await new Promise(resolve => setTimeout(resolve, 2000))
      
      const dummyCaptions = [
        "‚ú® ‡§π‡§∞ ‡§™‡§≤ ‡§ï‡•ã ‡§ñ‡•Ç‡§¨‡§∏‡•Ç‡§∞‡§§‡•Ä ‡§∏‡•á ‡§ú‡•Ä‡§®‡•á ‡§ï‡§æ ‡§π‡•Å‡§®‡§∞ ‡§∏‡•Ä‡§ñ‡•á‡§Ç‡•§ ‡§ú‡•Ä‡§µ‡§® ‡§è‡§ï ‡§∏‡•Å‡§Ç‡§¶‡§∞ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§π‡•à ‡§ú‡•ã ‡§π‡§Æ‡•á‡§Ç ‡§®‡§ø‡§∞‡§Ç‡§§‡§∞ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§î‡§∞ ‡§ñ‡•ã‡§ú ‡§ï‡•Ä ‡§ì‡§∞ ‡§≤‡•á ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡•§ #‡§Ü‡§§‡•ç‡§Æ‡§µ‡§ø‡§ï‡§æ‡§∏ #‡§ú‡•Ä‡§µ‡§®",
        "üåü ‡§∏‡§™‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ï‡•Ä‡§ï‡§§ ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡•á‡§Ç, ‡§è‡§ï ‡§ï‡§¶‡§Æ ‡§è‡§ï ‡§∏‡§Æ‡§Ø ‡§Æ‡•á‡§Ç‡•§ ‡§∞‡§æ‡§∏‡•ç‡§§‡§æ ‡§Ü‡§∏‡§æ‡§® ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§ó‡§æ, ‡§≤‡•á‡§ï‡§ø‡§® ‡§π‡§∞ ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§á‡§∏‡•á ‡§î‡§∞ ‡§≠‡•Ä ‡§ñ‡§æ‡§∏ ‡§¨‡§®‡§æ‡§§‡•Ä ‡§π‡•à‡•§ #‡§™‡•ç‡§∞‡•á‡§∞‡§£‡§æ #‡§∏‡§´‡§≤‡§§‡§æ",
        "üí´ ‡§π‡§∞ ‡§ï‡•ç‡§∑‡§£ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§¶‡•Ç ‡§¨‡§®‡§æ‡§è‡§Ç‡•§ ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä ‡§õ‡•ã‡§ü‡•á ‡§ï‡§¶‡§Æ ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡•Ä ‡§∏‡§´‡§≤‡§§‡§æ ‡§ï‡•Ä ‡§ì‡§∞ ‡§≤‡•á ‡§ú‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§ #‡§™‡•ç‡§∞‡§ó‡§§‡§ø #‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ"
      ]
      
      setGeneratedCaptions(dummyCaptions)
      toast.success("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§ø‡§è ‡§ó‡§è!")
    } catch (error) {
      toast.error("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§ú‡§®‡§∞‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤")
    } finally {
      setIsGenerating(false)
    }
  }

  const handleCopy = (text: string) => {
    navigator.clipboard.writeText(text)
    toast.success("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§ï‡•ç‡§≤‡§ø‡§™‡§¨‡•ã‡§∞‡•ç‡§° ‡§™‡§∞ ‡§ï‡•â‡§™‡•Ä ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!")
  }

  const handleSave = (caption: string) => {
    setSavedCaptions(prev => [...prev, caption])
    toast.success("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§≤‡§æ‡§á‡§¨‡•ç‡§∞‡•á‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡§π‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ!")
  }

  return (
    <div className="page-container">
      <Navbar />
      <main className="main-content">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="max-w-4xl mx-auto space-y-8"
          >
            <div className="text-center space-y-4">
              <h1 className="text-4xl font-bold gradient-text">‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§ú‡§®‡§∞‡•á‡§ü‡§∞</h1>
              <p className="text-xl text-muted-foreground">
                AI ‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§∏‡•á ‡§∏‡•á‡§ï‡§Ç‡§°‡•ç‡§∏ ‡§Æ‡•á‡§Ç ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§¨‡§®‡§æ‡§è‡§Ç
              </p>
            </div>

            <ToolsToggle />

            <HindiCaptionForm 
              onGenerate={handleGenerate}
              isGenerating={isGenerating}
            />

            {isPremiumPreview && (
              <div className="flex items-center gap-2 text-sm text-primary">
                <Crown className="h-4 w-4" />
                <span>30 ‡§¶‡§ø‡§® ‡§ï‡§æ ‡§´‡•ç‡§∞‡•Ä ‡§ü‡•ç‡§∞‡§æ‡§Ø‡§≤</span>
              </div>
            )}

            <CaptionList 
              captions={generatedCaptions}
              onCopy={handleCopy}
              onSave={handleSave}
            />

            <HindiFeatureCards />
          </motion.div>
        </div>
      </main>
      <FooterSection />
    </div>
  )
}