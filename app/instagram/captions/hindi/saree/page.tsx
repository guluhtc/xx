"use client"

import { useState } from "react"
import { motion } from "framer-motion"
import { Navbar } from "@/components/navbar"
import { FooterSection } from "@/components/footer-section"
import { Crown } from "lucide-react"
import { toast } from "sonner"
import { ToolsToggle } from "@/components/instagram/tools-toggle"
import { SareeCaptionForm } from "@/components/captions/hindi/saree/caption-form"
import { CaptionList } from "@/components/captions/caption-list"
import { SareeFeatureCards } from "@/components/captions/hindi/saree/feature-cards"
import { CaptionSuggestions } from "@/components/captions/hindi/saree/caption-suggestions"

export default function SareeCaptionsPage() {
  const [isGenerating, setIsGenerating] = useState(false)
  const [generatedCaptions, setGeneratedCaptions] = useState<string[]>([])
  const [isPremiumPreview, setIsPremiumPreview] = useState(true)
  const [savedCaptions, setSavedCaptions] = useState<string[]>([])

  const handleGenerate = async (prompt: string, options: any) => {
    if (!prompt) {
      toast.error("‡§ï‡•É‡§™‡§Ø‡§æ ‡§è‡§ï ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç")
      return
    }

    setIsGenerating(true)
    try {
      // Simulated API call
      await new Promise(resolve => setTimeout(resolve, 2000))
      
      const dummyCaptions = [
        "‚ú® ‡§∏‡§æ‡§°‡§º‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡§ú‡•Ä ‡§π‡§∞ ‡§®‡§æ‡§∞‡•Ä, ‡§ñ‡•Ç‡§¨‡§∏‡•Ç‡§∞‡§§‡•Ä ‡§ï‡•Ä ‡§Æ‡§ø‡§∏‡§æ‡§≤ ‡§¨‡§®‡•Ä‡•§ ‡§™‡§∞‡§Ç‡§™‡§∞‡§æ ‡§î‡§∞ ‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï‡§§‡§æ ‡§ï‡§æ ‡§Ö‡§®‡•Ç‡§†‡§æ ‡§Æ‡•á‡§≤, ‡§Ø‡§π‡•Ä ‡§§‡•ã ‡§π‡•à ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§®‡§æ‡§∞‡•Ä ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§®‡•§ #‡§∏‡§æ‡§°‡§º‡•Ä #‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø‡§™‡§∞‡§ø‡§ß‡§æ‡§®",
        "üåü ‡§∏‡§æ‡§°‡§º‡•Ä ‡§π‡•à ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø ‡§ï‡§æ ‡§™‡•ç‡§∞‡§§‡•Ä‡§ï, ‡§á‡§∏‡§Æ‡•á‡§Ç ‡§ù‡§≤‡§ï‡§§‡•Ä ‡§π‡•à ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§Ç‡§™‡§∞‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§ñ‡•Ç‡§¨‡§∏‡•Ç‡§∞‡§§‡•Ä‡•§ ‡§π‡§∞ ‡§Æ‡•å‡§∏‡§Æ, ‡§π‡§∞ ‡§Ö‡§µ‡§∏‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§Ö‡§≤‡§ó ‡§∏‡§æ‡§°‡§º‡•Ä, ‡§Ø‡§π‡•Ä ‡§§‡•ã ‡§π‡•à ‡§á‡§∏‡§ï‡•Ä ‡§ñ‡§æ‡§∏‡§ø‡§Ø‡§§‡•§ #‡§∏‡§æ‡§°‡§º‡•Ä‡§≤‡§µ #‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø",
        "üí´ ‡§õ‡§π ‡§ó‡§ú ‡§ï‡§æ ‡§Ø‡§π ‡§∏‡§æ‡§°‡§º‡•Ä ‡§ï‡§æ ‡§™‡§∞‡§ø‡§ß‡§æ‡§®, ‡§¨‡§®‡§æ‡§è ‡§π‡§∞ ‡§®‡§æ‡§∞‡•Ä ‡§ï‡•ã ‡§Æ‡§π‡§æ‡§∞‡§æ‡§®‡•Ä ‡§∏‡§Æ‡§æ‡§®‡•§ ‡§∏‡§æ‡§¶‡§ó‡•Ä ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§¶‡§ø‡§ñ‡•á ‡§∂‡§æ‡§®, ‡§î‡§∞ ‡§∂‡§ó‡•Å‡§® ‡§ï‡•á ‡§Ö‡§µ‡§∏‡§∞ ‡§™‡§∞ ‡§¨‡§®‡•á ‡§™‡§π‡§ö‡§æ‡§®‡•§ #‡§∏‡§æ‡§°‡§º‡•Ä‡§∏‡•ç‡§ü‡§æ‡§á‡§≤ #‡§™‡§∞‡§Ç‡§™‡§∞‡§æ‡§ó‡§§"
      ]
      
      setGeneratedCaptions(dummyCaptions)
      toast.success("‡§∏‡§æ‡§°‡§º‡•Ä ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§∏‡§´‡§≤‡§§‡§æ‡§™‡•Ç‡§∞‡•ç‡§µ‡§ï ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§ï‡§ø‡§è ‡§ó‡§è!")
    } catch (error) {
      toast.error("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§ú‡§®‡§∞‡•á‡§ü ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§´‡§≤")
    } finally {
      setIsGenerating(false)
    }
  }

  const handleCopy = (text: string) => {
    navigator.clipboard.writeText(text)
    toast.success("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§ï‡•ç‡§≤‡§ø‡§™‡§¨‡•ã‡§∞‡•ç‡§° ‡§™‡§∞ ‡§ï‡•â‡§™‡•Ä ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ!")
  }

  const handleSave = (caption: string) => {
    setSavedCaptions(prev => [...prev, caption])
    toast.success("‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§≤‡§æ‡§á‡§¨‡•ç‡§∞‡•á‡§∞‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡§π‡•á‡§ú‡§æ ‡§ó‡§Ø‡§æ!")
  }

  return (
    <div className="page-container">
      <Navbar />
      <main className="main-content">
        <div className="container">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="max-w-4xl mx-auto space-y-8"
          >
            <div className="text-center space-y-4">
              <h1 className="text-4xl font-bold gradient-text">‡§∏‡§æ‡§°‡§º‡•Ä ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§ú‡§®‡§∞‡•á‡§ü‡§∞</h1>
              <p className="text-xl text-muted-foreground">
                ‡§∏‡§æ‡§°‡§º‡•Ä ‡§™‡•ã‡§∏‡•ç‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§ï‡•à‡§™‡•ç‡§∂‡§® ‡§¨‡§®‡§æ‡§è‡§Ç
              </p>
            </div>

            <ToolsToggle />

            <SareeCaptionForm 
              onGenerate={handleGenerate}
              isGenerating={isGenerating}
            />

            {isPremiumPreview && (
              <div className="flex items-center gap-2 text-sm text-primary">
                <Crown className="h-4 w-4" />
                <span>30 ‡§¶‡§ø‡§® ‡§ï‡§æ ‡§´‡•ç‡§∞‡•Ä ‡§ü‡•ç‡§∞‡§æ‡§Ø‡§≤</span>
              </div>
            )}

            {generatedCaptions.length > 0 && (
              <CaptionList 
                captions={generatedCaptions}
                onCopy={handleCopy}
                onSave={handleSave}
              />
            )}

            <CaptionSuggestions onCopy={handleCopy} />

            <SareeFeatureCards />
          </motion.div>
        </div>
      </main>
      <FooterSection />
    </div>
  )
}